<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="CheckOutFlow_0930" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;106&quot;, &quot;Google Chrome&quot;;v=&quot;106&quot;, &quot;Not;A=Brand&quot;;v=&quot;99&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">meals2go-cert.azureedge.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">dpm.demdex.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">wegcertapi.azure-api.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">edge.adobedc.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">mbox.wegmans.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">dc.services.visualstudio.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="subscriptionkey" elementType="Argument">
            <stringProp name="Argument.name">subscriptionkey</stringProp>
            <stringProp name="Argument.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="currenttime" elementType="Argument">
            <stringProp name="Argument.name">currenttime</stringProp>
            <stringProp name="Argument.value">${__time(YYYY-MM-dd,)}T${__time(hh:mm:ss.sss,)}Z</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1_LaunchURL" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://meals2go-cert.azureedge.net/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-939082083">Choose your favorite restaurant</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/app-config/client/kv?key=servicedisruptioncheck,servicedisruptionmessage&amp;api-version=2019-04-24" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2019-04-24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">servicedisruptioncheck,servicedisruptionmessage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">app-config/client/kv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Weg2Go-Client-Source" elementType="Header">
                  <stringProp name="Header.name">Weg2Go-Client-Source</stringProp>
                  <stringProp name="Header.value">web</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">${subscriptionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/app-config/user/flags?api-version=2019-04-24" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2019-04-24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">app-config/user/flags</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">${subscriptionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/guest-idp/token?api-version=2020-01-29" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;client_id&quot;:&quot;GUEST&quot;,&quot;client_secret&quot;:&quot;REEyMjQ1MzMtQTZCQi00RTZFLUJEQjYtMTQ5MkZDQzMyRTZDCg==&quot;,&quot;grant_type&quot;:&quot;client_credentials&quot;}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">guest-idp/token?api-version=2020-01-29</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">${subscriptionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">AccessToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/location/locations?api-version=2020-09-09&amp;Subscription-Key=861fc69b2434494ab9f3250633ad8a5c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2020-09-09</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Subscription-Key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Subscription-Key</stringProp>
                  <stringProp name="Argument.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">location/locations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">${subscriptionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/order-capture/delivery-minimum?api-version=2020-11-04" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2020-11-04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">order-capture/delivery-minimum</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">${subscriptionkey}</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/cart/organizations/1/stores/90/storefronts/1?api-version=2020-10-07&amp;includeUnavailableItems=true&amp;fulfillmentType=delivery" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2020-10-07</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="includeUnavailableItems" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">includeUnavailableItems</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fulfillmentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fulfillmentType</stringProp>
                  <stringProp name="Argument.value">delivery</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cart/organizations/1/stores/90/storefronts/1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">${subscriptionkey}</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://edge.adobedc.net/ee/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=07009601-2297-4b68-8359-6021a774cb78" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;eventType&quot;:&quot;web.webpagedetails.pageViews&quot;,&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://meals2go-cert.azureedge.net/&quot;,&quot;name&quot;:&quot;Landing View&quot;,&quot;pageViews&quot;:{&quot;value&quot;:1}},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;}},&quot;device&quot;:{&quot;screenHeight&quot;:1080,&quot;screenWidth&quot;:1920,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1920,&quot;viewportHeight&quot;:969}},&quot;placeContext&quot;:{&quot;localTime&quot;:&quot;2022-09-30T09:54:02.011-04:00&quot;,&quot;localTimezoneOffset&quot;:240},&quot;timestamp&quot;:&quot;2022-09-30T13:54:02.011Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.12.0+2.13.0&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;identityMap&quot;:{},&quot;commerce&quot;:{&quot;productViews&quot;:{&quot;value&quot;:&quot;&quot;}},&quot;marketing&quot;:{&quot;trackingCode&quot;:&quot;&quot;},&quot;_experience&quot;:{&quot;analytics&quot;:{&quot;customDimensions&quot;:{&quot;eVars&quot;:{&quot;eVar1&quot;:&quot;Landing View&quot;,&quot;eVar2&quot;:&quot;n/a&quot;,&quot;eVar3&quot;:&quot;n/a&quot;,&quot;eVar4&quot;:&quot;n/a&quot;,&quot;eVar5&quot;:&quot;n/a&quot;,&quot;eVar6&quot;:&quot;Landing View&quot;,&quot;eVar7&quot;:&quot;www.meals2go.com&quot;,&quot;eVar8&quot;:&quot;english&quot;,&quot;eVar29&quot;:&quot;https://meals2go-cert.azureedge.net/&quot;,&quot;eVar59&quot;:&quot;Guest&quot;,&quot;eVar62&quot;:&quot;79456129344750949264162907903919272543&quot;,&quot;eVar63&quot;:&quot;90&quot;,&quot;eVar90&quot;:&quot;&quot;,&quot;eVar100&quot;:&quot;&quot;},&quot;props&quot;:{&quot;prop2&quot;:&quot;n/a&quot;,&quot;prop3&quot;:&quot;n/a&quot;,&quot;prop4&quot;:&quot;n/a&quot;,&quot;prop5&quot;:&quot;n/a&quot;,&quot;prop6&quot;:&quot;Landing View&quot;,&quot;prop7&quot;:&quot;www.meals2go.com&quot;,&quot;prop8&quot;:&quot;english&quot;,&quot;prop29&quot;:&quot;https://meals2go-cert.azureedge.net/&quot;,&quot;prop62&quot;:&quot;79456129344750949264162907903919272543&quot;}}}},&quot;productListItems&quot;:[]},&quot;query&quot;:{&quot;personalization&quot;:{&quot;schemas&quot;:[&quot;https://ns.adobe.com/personalization/default-content-item&quot;,&quot;https://ns.adobe.com/personalization/html-content-item&quot;,&quot;https://ns.adobe.com/personalization/json-content-item&quot;,&quot;https://ns.adobe.com/personalization/redirect-item&quot;,&quot;https://ns.adobe.com/personalization/dom-action&quot;],&quot;decisionScopes&quot;:[&quot;__view__&quot;]}}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;azureedge.net&quot;,&quot;cookiesEnabled&quot;:true,&quot;entries&quot;:[{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_identity&quot;,&quot;value&quot;:&quot;CiY3OTQ1NjEyOTM0NDc1MDk0OTI2NDE2MjkwNzkwMzkxOTI3MjU0M1IOCLCblqu4MBgBKgNWQTbwAfmF7da4MA==&quot;}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=07009601-2297-4b68-8359-6021a774cb78</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;8bf9e6e863d642099a001063eec7b67d&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;4480815EB968B2E9-2DDE381B27998561&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Landing View&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}},&quot;prefetch&quot;:{&quot;views&quot;:[{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Landing View&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2_SelectTesting" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dc.services.visualstudio.com/v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">POST https://dc.services.visualstudio.com/v2/track&#xd;
&#xd;
POST data:&#xd;
[{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.8c01967b18134d78&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/app-config/client/kv?key=servicedisruptioncheck,servicedisruptionmessage&amp;api-version=2019-04-24&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.142&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/app-config/client/kv?key=servicedisruptioncheck,servicedisruptionmessage&amp;api-version=2019-04-24&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.9d2d642a914b43f9&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/app-config/user/flags?api-version=2019-04-24&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.041&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/app-config/user/flags?api-version=2019-04-24&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Exception&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;ExceptionData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;exceptions&quot;:[{&quot;typeName&quot;:&quot;Error&quot;,&quot;message&quot;:&quot;B2C Restore Token&quot;,&quot;hasFullStack&quot;:true,&quot;stack&quot;:&quot;Error: B2C Restore Token\n    at Gf.logException (https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js:1:1070039)\n    at https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js:1:43995\n    at Array.forEach (&lt;anonymous&gt;)\n    at n.logException (https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js:1:43977)\n    at n.&lt;anonymous&gt; (https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js:1:50681)\n    at Generator.next (&lt;anonymous&gt;)\n    at https://meals2go-cert.azureedge.net/vendor.e4947d3cfe8c051f.js:1:1488507\n    at new t (https://meals2go-cert.azureedge.net/polyfills.47bda5e97bbe55ac.js:1:19039)\n    at S (https://meals2go-cert.azureedge.net/vendor.e4947d3cfe8c051f.js:1:1488248)\n    at S._next (https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js:1:50513)&quot;,&quot;parsedStack&quot;:[{&quot;level&quot;:0,&quot;method&quot;:&quot;Gf.logException&quot;,&quot;assembly&quot;:&quot;at Gf.logException (https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js:1:1070039)&quot;,&quot;fileName&quot;:&quot;https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:1,&quot;method&quot;:&quot;&lt;no_method&gt;&quot;,&quot;assembly&quot;:&quot;at https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js:1:43995&quot;,&quot;fileName&quot;:&quot;https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:2,&quot;method&quot;:&quot;n.logException&quot;,&quot;assembly&quot;:&quot;at n.logException (https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js:1:43977)&quot;,&quot;fileName&quot;:&quot;https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:3,&quot;method&quot;:&quot;n.&lt;anonymous&gt;&quot;,&quot;assembly&quot;:&quot;at n.&lt;anonymous&gt; (https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js:1:50681)&quot;,&quot;fileName&quot;:&quot;https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:4,&quot;method&quot;:&quot;&lt;no_method&gt;&quot;,&quot;assembly&quot;:&quot;at https://meals2go-cert.azureedge.net/vendor.e4947d3cfe8c051f.js:1:1488507&quot;,&quot;fileName&quot;:&quot;https://meals2go-cert.azureedge.net/vendor.e4947d3cfe8c051f.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:5,&quot;method&quot;:&quot;new t&quot;,&quot;assembly&quot;:&quot;at new t (https://meals2go-cert.azureedge.net/polyfills.47bda5e97bbe55ac.js:1:19039)&quot;,&quot;fileName&quot;:&quot;https://meals2go-cert.azureedge.net/polyfills.47bda5e97bbe55ac.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:6,&quot;method&quot;:&quot;S&quot;,&quot;assembly&quot;:&quot;at S (https://meals2go-cert.azureedge.net/vendor.e4947d3cfe8c051f.js:1:1488248)&quot;,&quot;fileName&quot;:&quot;https://meals2go-cert.azureedge.net/vendor.e4947d3cfe8c051f.js&quot;,&quot;line&quot;:1},{&quot;level&quot;:7,&quot;method&quot;:&quot;S._next&quot;,&quot;assembly&quot;:&quot;at S._next (https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js:1:50513)&quot;,&quot;fileName&quot;:&quot;https://meals2go-cert.azureedge.net/main.b2df38394a68e9b3.js&quot;,&quot;line&quot;:1}]}],&quot;properties&quot;:{&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;,&quot;exception&quot;:&quot;{}&quot;}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.c2dd094733e14cc0&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://wegcertapi.azure-api.net/guest-idp/token?api-version=2020-01-29&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.072&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://wegcertapi.azure-api.net/guest-idp/token?api-version=2020-01-29&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.738386bdf8744563&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/location/locations?api-version=2020-09-09&amp;Subscription-Key=861fc69b2434494ab9f3250633ad8a5c&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.119&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/location/locations?api-version=2020-09-09&amp;Subscription-Key=861fc69b2434494ab9f3250633ad8a5c&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.15b08c1462fc485f&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/order-capture/delivery-minimum?api-version=2020-11-04&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.141&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/order-capture/delivery-minimum?api-version=2020-11-04&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.e503500e71be4cb0&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/cart/organizations/1/stores/90/storefronts/1?api-version=2020-10-07&amp;includeUnavailableItems=true&amp;fulfillmentType=delivery&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.146&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/cart/organizations/1/stores/90/storefronts/1?api-version=2020-10-07&amp;includeUnavailableItems=true&amp;fulfillmentType=delivery&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.b7941cba2ed24884&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=&amp;version=2.7.0&quot;,&quot;resultCode&quot;:&quot;400&quot;,&quot;duration&quot;:&quot;00:00:00.062&quot;,&quot;success&quot;:false,&quot;data&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=&amp;version=2.7.0&quot;,&quot;target&quot;:&quot;mbox.wegmans.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Landing Screen&quot;,&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/&quot;,&quot;duration&quot;:&quot;00:00:01.411&quot;,&quot;properties&quot;:{&quot;Window Size&quot;:&quot;1920 x 969&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;,&quot;refUri&quot;:&quot;&quot;,&quot;isLoggedIn&quot;:&quot;false&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.PageviewPerformance&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewPerformanceData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Landing Screen&quot;,&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/&quot;,&quot;duration&quot;:&quot;00:00:01.411&quot;,&quot;perfTotal&quot;:&quot;00:00:01.411&quot;,&quot;networkConnect&quot;:&quot;00:00:00.000&quot;,&quot;sentRequest&quot;:&quot;00:00:00.003&quot;,&quot;receivedResponse&quot;:&quot;00:00:00.001&quot;,&quot;domProcessing&quot;:&quot;00:00:01.338&quot;,&quot;properties&quot;:{&quot;Window Size&quot;:&quot;1920 x 969&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;},&quot;measurements&quot;:{&quot;duration&quot;:1411.0999999996275}}}}]&#xd;
&#xd;
[no cookies]&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sdk-Context" elementType="Header">
                  <stringProp name="Header.name">Sdk-Context</stringProp>
                  <stringProp name="Header.value">appId</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3_SelectDelivery" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dc.services.visualstudio.com/v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Event&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;EventData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Landing Screen - Delivery Order Btn Click&quot;,&quot;properties&quot;:{&quot;Actions&quot;:&quot;Delivery Order&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Delivery Address Entry&quot;,&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/&quot;,&quot;duration&quot;:&quot;00:00:01.411&quot;,&quot;properties&quot;:{&quot;Window Size&quot;:&quot;1920 x 969&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;,&quot;refUri&quot;:&quot;&quot;,&quot;isLoggedIn&quot;:&quot;false&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sdk-Context" elementType="Header">
                  <stringProp name="Header.name">Sdk-Context</stringProp>
                  <stringProp name="Header.value">appId</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="4_EnterAddress" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/google/maps/places?input=5411&amp;sessiontoken=b098fdd3a7b24780b60ee52993e5beaa&amp;components=country:us&amp;types=address&amp;location=43.10613,-77.543218&amp;radius=22000&amp;api-version=2019-11-01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="input" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">input</stringProp>
                  <stringProp name="Argument.value">5411</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2019-11-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="components" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">components</stringProp>
                  <stringProp name="Argument.value">country:us</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="types" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">types</stringProp>
                  <stringProp name="Argument.value">address</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="location" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">location</stringProp>
                  <stringProp name="Argument.value">43.10613,-77.543218</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="radius" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">radius</stringProp>
                  <stringProp name="Argument.value">22000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sessiontoken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessiontoken</stringProp>
                  <stringProp name="Argument.value">b098fdd3a7b24780b60ee52993e5beaa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google/maps/places</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/google/maps/geocode-placeid?place_id=ChIJ-1wVaNF104kRz2bh8ryj-I8&amp;api-version=2019-11-01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2019-11-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="place_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">place_id</stringProp>
                  <stringProp name="Argument.value">ChIJ-1wVaNF104kRz2bh8ryj-I8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google/maps/geocode-placeid</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/location/locations/organizations/1/store-delivery-locations?api-version=2020-09-09" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;postalCode&quot;:&quot;14221-2883&quot;,&quot;streetAddress&quot;:&quot;5411 Transit Road&quot;,&quot;state&quot;:&quot;NY&quot;,&quot;county&quot;:&quot;Erie County&quot;,&quot;city&quot;:&quot;Buffalo&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">location/locations/organizations/1/store-delivery-locations?api-version=2020-09-09</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1970744438">storeNumber</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dc.services.visualstudio.com/v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.6c00bab580144531&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/google/maps/places?input=5411&amp;sessiontoken=b098fdd3a7b24780b60ee52993e5beaa&amp;components=country:us&amp;types=address&amp;location=43.10613,-77.543218&amp;radius=22000&amp;api-version=2019-11-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.052&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/google/maps/places?input=5411&amp;sessiontoken=b098fdd3a7b24780b60ee52993e5beaa&amp;components=country:us&amp;types=address&amp;location=43.10613,-77.543218&amp;radius=22000&amp;api-version=2019-11-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.92ab257192864611&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/google/maps/geocode-placeid?place_id=ChIJ-1wVaNF104kRz2bh8ryj-I8&amp;api-version=2019-11-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.461&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/google/maps/geocode-placeid?place_id=ChIJ-1wVaNF104kRz2bh8ryj-I8&amp;api-version=2019-11-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.1fa16e1c737c4376&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://wegcertapi.azure-api.net/location/locations/organizations/1/store-delivery-locations?api-version=2020-09-09&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.676&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://wegcertapi.azure-api.net/location/locations/organizations/1/store-delivery-locations?api-version=2020-09-09&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Delivery Address Confirm&quot;,&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/&quot;,&quot;duration&quot;:&quot;00:00:01.411&quot;,&quot;properties&quot;:{&quot;Window Size&quot;:&quot;1920 x 969&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;,&quot;refUri&quot;:&quot;&quot;,&quot;isLoggedIn&quot;:&quot;false&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sdk-Context" elementType="Header">
                  <stringProp name="Header.name">Sdk-Context</stringProp>
                  <stringProp name="Header.value">appId</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5_ClickContinue" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/cart/organizations/1/stores/90/storefronts/1?api-version=2020-10-07&amp;includeUnavailableItems=true&amp;fulfillmentType=delivery" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2020-10-07</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="includeUnavailableItems" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">includeUnavailableItems</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fulfillmentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fulfillmentType</stringProp>
                  <stringProp name="Argument.value">delivery</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cart/organizations/1/stores/90/storefronts/1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1120879310">cartItems&quot;:[],</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus?catering=false&amp;api-version=2021-02-01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="catering" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">catering</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1581447783">menuContents</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus?catering=false&amp;api-version=2021-02-01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="catering" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">catering</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus?catering=false&amp;api-version=2021-02-01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="catering" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">catering</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dc.services.visualstudio.com/v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Event&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;EventData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;All Cuisine Menu - Top Nav - Menu Selection&quot;,&quot;properties&quot;:{&quot;Actions&quot;:&quot;Meals&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.b05524d48d5a4f25&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/cart/organizations/1/stores/90/storefronts/1?api-version=2020-10-07&amp;includeUnavailableItems=true&amp;fulfillmentType=delivery&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.058&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/cart/organizations/1/stores/90/storefronts/1?api-version=2020-10-07&amp;includeUnavailableItems=true&amp;fulfillmentType=delivery&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.2afc2c3a37f646e8&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus?catering=false&amp;api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.100&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus?catering=false&amp;api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.a12f358d08b2478a&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus?catering=false&amp;api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.064&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus?catering=false&amp;api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.e63696a35f8a49f5&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus?catering=false&amp;api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.079&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus?catering=false&amp;api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;All Cuisine Menu&quot;,&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu&quot;,&quot;duration&quot;:&quot;00:00:01.411&quot;,&quot;properties&quot;:{&quot;Window Size&quot;:&quot;1920 x 969&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;,&quot;refUri&quot;:&quot;&quot;,&quot;isLoggedIn&quot;:&quot;false&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sdk-Context" elementType="Header">
                  <stringProp name="Header.name">Sdk-Context</stringProp>
                  <stringProp name="Header.value">appId</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://edge.adobedc.net/ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=821e5aaf-a0b3-46b3-960f-8b00daa372d9" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;eventType&quot;:&quot;web.webpagedetails.pageViews&quot;,&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://meals2go-cert.azureedge.net/menu&quot;,&quot;name&quot;:&quot;Menu View&quot;,&quot;pageViews&quot;:{&quot;value&quot;:1}},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;}},&quot;device&quot;:{&quot;screenHeight&quot;:1080,&quot;screenWidth&quot;:1920,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1920,&quot;viewportHeight&quot;:969}},&quot;placeContext&quot;:{&quot;localTime&quot;:&quot;2022-09-30T09:55:21.020-04:00&quot;,&quot;localTimezoneOffset&quot;:240},&quot;timestamp&quot;:&quot;2022-09-30T13:55:21.020Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.12.0+2.13.0&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;identityMap&quot;:{},&quot;commerce&quot;:{&quot;productViews&quot;:{&quot;value&quot;:&quot;&quot;}},&quot;marketing&quot;:{&quot;trackingCode&quot;:&quot;&quot;},&quot;_experience&quot;:{&quot;analytics&quot;:{&quot;customDimensions&quot;:{&quot;eVars&quot;:{&quot;eVar1&quot;:&quot;Menu View&quot;,&quot;eVar2&quot;:&quot;n/a&quot;,&quot;eVar3&quot;:&quot;n/a&quot;,&quot;eVar4&quot;:&quot;n/a&quot;,&quot;eVar5&quot;:&quot;n/a&quot;,&quot;eVar6&quot;:&quot;Menu View&quot;,&quot;eVar7&quot;:&quot;www.meals2go.com&quot;,&quot;eVar8&quot;:&quot;english&quot;,&quot;eVar29&quot;:&quot;https://meals2go-cert.azureedge.net/menu&quot;,&quot;eVar59&quot;:&quot;Guest&quot;,&quot;eVar62&quot;:&quot;79456129344750949264162907903919272543&quot;,&quot;eVar63&quot;:&quot;90&quot;,&quot;eVar90&quot;:&quot;&quot;,&quot;eVar100&quot;:&quot;&quot;},&quot;props&quot;:{&quot;prop2&quot;:&quot;n/a&quot;,&quot;prop3&quot;:&quot;n/a&quot;,&quot;prop4&quot;:&quot;n/a&quot;,&quot;prop5&quot;:&quot;n/a&quot;,&quot;prop6&quot;:&quot;Menu View&quot;,&quot;prop7&quot;:&quot;www.meals2go.com&quot;,&quot;prop8&quot;:&quot;english&quot;,&quot;prop29&quot;:&quot;https://meals2go-cert.azureedge.net/menu&quot;,&quot;prop62&quot;:&quot;79456129344750949264162907903919272543&quot;}}}},&quot;productListItems&quot;:[]}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;azureedge.net&quot;,&quot;cookiesEnabled&quot;:true,&quot;entries&quot;:[{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_identity&quot;,&quot;value&quot;:&quot;CiY3OTQ1NjEyOTM0NDc1MDk0OTI2NDE2MjkwNzkwMzkxOTI3MjU0M1IOCLCblqu4MBgBKgNWQTbwAfmF7da4MA==&quot;},{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_cluster&quot;,&quot;value&quot;:&quot;va6&quot;}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=821e5aaf-a0b3-46b3-960f-8b00daa372d9</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;5d4613f252764f20949dc61eba2a4e49&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;7001E256A180DFE3-5A5188084DEB6A65&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Menu View&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}},&quot;prefetch&quot;:{&quot;views&quot;:[{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Menu View&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;2e297b144a6c443bbbfeef5f0b71c4e1&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;671173C91B84826B-7A7F1611D0C57EE7&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Menu View&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="6_SelectPizza&amp;Wings" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/1/children?api-version=2021-02-01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/1/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1324730115">Classic &amp; Create Your Own Pizza</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dc.services.visualstudio.com/v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.5bede67f0e0a4c16&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.115&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;target&quot;:&quot;mbox.wegmans.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.6af9e6c116da4760&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.036&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;target&quot;:&quot;mbox.wegmans.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Pizza &amp; Wings Menu&quot;,&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;duration&quot;:&quot;00:00:01.411&quot;,&quot;properties&quot;:{&quot;Window Size&quot;:&quot;1920 x 969&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;,&quot;refUri&quot;:&quot;&quot;,&quot;isLoggedIn&quot;:&quot;false&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sdk-Context" elementType="Header">
                  <stringProp name="Header.name">Sdk-Context</stringProp>
                  <stringProp name="Header.value">appId</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/513/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/513/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/361/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/361/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/395/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/395/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/120/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/120/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/886/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/886/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://edge.adobedc.net/ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=9e6907c3-fc92-4ccc-95ef-fc43a3915e7d" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;eventType&quot;:&quot;web.webpagedetails.pageViews&quot;,&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;name&quot;:&quot;Cuisine View | Pizza &amp; Wings&quot;,&quot;pageViews&quot;:{&quot;value&quot;:1}},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;}},&quot;device&quot;:{&quot;screenHeight&quot;:1080,&quot;screenWidth&quot;:1920,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1920,&quot;viewportHeight&quot;:969}},&quot;placeContext&quot;:{&quot;localTime&quot;:&quot;2022-09-30T09:55:36.007-04:00&quot;,&quot;localTimezoneOffset&quot;:240},&quot;timestamp&quot;:&quot;2022-09-30T13:55:36.007Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.12.0+2.13.0&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;identityMap&quot;:{},&quot;commerce&quot;:{&quot;productViews&quot;:{&quot;value&quot;:&quot;&quot;}},&quot;marketing&quot;:{&quot;trackingCode&quot;:&quot;&quot;},&quot;_experience&quot;:{&quot;analytics&quot;:{&quot;customDimensions&quot;:{&quot;eVars&quot;:{&quot;eVar1&quot;:&quot;Cuisine View | Pizza &amp; Wings&quot;,&quot;eVar2&quot;:&quot;n/a&quot;,&quot;eVar3&quot;:&quot;n/a&quot;,&quot;eVar4&quot;:&quot;n/a&quot;,&quot;eVar5&quot;:&quot;n/a&quot;,&quot;eVar6&quot;:&quot;Cuisine View&quot;,&quot;eVar7&quot;:&quot;www.meals2go.com&quot;,&quot;eVar8&quot;:&quot;english&quot;,&quot;eVar29&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;eVar59&quot;:&quot;Guest&quot;,&quot;eVar62&quot;:&quot;79456129344750949264162907903919272543&quot;,&quot;eVar63&quot;:&quot;90&quot;,&quot;eVar90&quot;:&quot;&quot;,&quot;eVar100&quot;:&quot;&quot;},&quot;props&quot;:{&quot;prop2&quot;:&quot;n/a&quot;,&quot;prop3&quot;:&quot;n/a&quot;,&quot;prop4&quot;:&quot;n/a&quot;,&quot;prop5&quot;:&quot;n/a&quot;,&quot;prop6&quot;:&quot;Cuisine View&quot;,&quot;prop7&quot;:&quot;www.meals2go.com&quot;,&quot;prop8&quot;:&quot;english&quot;,&quot;prop29&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;prop62&quot;:&quot;79456129344750949264162907903919272543&quot;}}}},&quot;productListItems&quot;:[]}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;azureedge.net&quot;,&quot;cookiesEnabled&quot;:true,&quot;entries&quot;:[{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_identity&quot;,&quot;value&quot;:&quot;CiY3OTQ1NjEyOTM0NDc1MDk0OTI2NDE2MjkwNzkwMzkxOTI3MjU0M1IOCLCblqu4MBgBKgNWQTbwAfmF7da4MA==&quot;},{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_cluster&quot;,&quot;value&quot;:&quot;va6&quot;}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=9e6907c3-fc92-4ccc-95ef-fc43a3915e7d</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;a08eadc8f6a04dfc8b010f6b3784ed1b&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;2995A99A20A6E048-795EFE1FCDEC3B0E&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Cuisine View | Pizza &amp; Wings&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}},&quot;prefetch&quot;:{&quot;views&quot;:[{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Cuisine View | Pizza &amp; Wings&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;90cf1e8c70594d5a9b9707b79b8db483&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;1606CFF07CA84CF2-028FC2B494C42D7D&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Cuisine View | Pizza &amp; Wings&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="7_SelectSheetPizza" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/kits/100?api-version=2021-02-01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/kits/100</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cartItemID</stringProp>
              <stringProp name="RegexExtractor.regex">wooKitId&quot;:&quot;(.*?)&quot;,&quot;isFulfillment</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-880791887">Create your own pizza with your choice of sauce</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://edge.adobedc.net/ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=5db5a275-8b2a-45d1-9604-ae9cd2b718cc" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;eventType&quot;:&quot;web.webpagedetails.pageViews&quot;,&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings/Kit/100&quot;,&quot;name&quot;:&quot;Product Detail View | Create Your Own Sheet Pizza - 32 Slices&quot;,&quot;pageViews&quot;:{&quot;value&quot;:1}},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;}},&quot;device&quot;:{&quot;screenHeight&quot;:1080,&quot;screenWidth&quot;:1920,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1920,&quot;viewportHeight&quot;:969}},&quot;placeContext&quot;:{&quot;localTime&quot;:&quot;2022-09-30T09:55:45.008-04:00&quot;,&quot;localTimezoneOffset&quot;:240},&quot;timestamp&quot;:&quot;2022-09-30T13:55:45.008Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.12.0+2.13.0&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;identityMap&quot;:{},&quot;commerce&quot;:{&quot;productViews&quot;:{&quot;value&quot;:&quot;1&quot;}},&quot;marketing&quot;:{&quot;trackingCode&quot;:&quot;&quot;},&quot;_experience&quot;:{&quot;analytics&quot;:{&quot;customDimensions&quot;:{&quot;eVars&quot;:{&quot;eVar1&quot;:&quot;Product Detail View | Create Your Own Sheet Pizza - 32 Slices&quot;,&quot;eVar2&quot;:&quot;menu&quot;,&quot;eVar3&quot;:&quot;Pizza &amp; Wings&quot;,&quot;eVar4&quot;:&quot;KIT&quot;,&quot;eVar5&quot;:&quot;n/a&quot;,&quot;eVar6&quot;:&quot;Product Detail View&quot;,&quot;eVar7&quot;:&quot;www.meals2go.com&quot;,&quot;eVar8&quot;:&quot;english&quot;,&quot;eVar29&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings/Kit/100&quot;,&quot;eVar59&quot;:&quot;Guest&quot;,&quot;eVar62&quot;:&quot;79456129344750949264162907903919272543&quot;,&quot;eVar63&quot;:&quot;90&quot;,&quot;eVar90&quot;:&quot;&quot;,&quot;eVar100&quot;:&quot;&quot;},&quot;props&quot;:{&quot;prop2&quot;:&quot;menu&quot;,&quot;prop3&quot;:&quot;Pizza &amp; Wings&quot;,&quot;prop4&quot;:&quot;KIT&quot;,&quot;prop5&quot;:&quot;n/a&quot;,&quot;prop6&quot;:&quot;Product Detail View&quot;,&quot;prop7&quot;:&quot;www.meals2go.com&quot;,&quot;prop8&quot;:&quot;english&quot;,&quot;prop29&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings/Kit/100&quot;,&quot;prop62&quot;:&quot;79456129344750949264162907903919272543&quot;}}}},&quot;productListItems&quot;:[{&quot;SKU&quot;:&quot;SKU_86674&quot;}]}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;azureedge.net&quot;,&quot;cookiesEnabled&quot;:true,&quot;entries&quot;:[{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_identity&quot;,&quot;value&quot;:&quot;CiY3OTQ1NjEyOTM0NDc1MDk0OTI2NDE2MjkwNzkwMzkxOTI3MjU0M1IOCLCblqu4MBgBKgNWQTbwAfmF7da4MA==&quot;},{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_cluster&quot;,&quot;value&quot;:&quot;va6&quot;}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=5db5a275-8b2a-45d1-9604-ae9cd2b718cc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;dbe1736fdfab4857bc085a3304ff6b67&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings/Kit/100&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;19946426F06D5300-10D592B74840642E&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings/Kit/100&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Product Detail View | Create Your Own Sheet Pizza - 32 Slices&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}},&quot;prefetch&quot;:{&quot;views&quot;:[{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings/Kit/100&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Product Detail View | Create Your Own Sheet Pizza - 32 Slices&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dc.services.visualstudio.com/v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.4fbb49bcf1764d7d&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/1/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.274&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/1/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.b983388827c74f60&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/361/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.431&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/361/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.b945f6ae4bbc4aaf&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.023&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;target&quot;:&quot;mbox.wegmans.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.8b534aabab164d6a&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/513/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.525&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/513/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.a88200f0b8344ad2&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/120/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.554&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/120/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.bf43d14dfb974f60&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.040&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;target&quot;:&quot;mbox.wegmans.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.247d062d6e934a13&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/395/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.735&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/395/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.428aa141444344da&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/886/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.068&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/886/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.8f1777a83f634fc9&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/kits/100?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.522&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/kits/100?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Product Detail Page&quot;,&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings/Kit/100&quot;,&quot;duration&quot;:&quot;00:00:01.411&quot;,&quot;properties&quot;:{&quot;Product Name&quot;:&quot;Sheet Pizza (Full Only)&quot;,&quot;SKU&quot;:&quot;739214&quot;,&quot;Window Size&quot;:&quot;1920 x 969&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;,&quot;refUri&quot;:&quot;&quot;,&quot;isLoggedIn&quot;:&quot;false&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sdk-Context" elementType="Header">
                  <stringProp name="Header.name">Sdk-Context</stringProp>
                  <stringProp name="Header.value">appId</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;095788f4609045d0a14808918ab1ae78&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings/Kit/100&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;780572CED0E55456-756F22697CC48383&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings/Kit/100&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Product Detail View | Create Your Own Sheet Pizza - 32 Slices&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="8_AddToCart" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/cart/organizations/1/stores/90/storefronts/1/cart-items?api-version=2020-10-07" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;includeUnavailableItems&quot;:true,&quot;fulfillmentType&quot;:&quot;delivery&quot;,&quot;cartItems&quot;:[{&quot;cartItemId&quot;:&quot;${cartItemID}&quot;,&quot;quantity&quot;:1,&quot;payload&quot;:{&quot;uiNavigationSections&quot;:[{&quot;kitContents&quot;:[{&quot;kitList&quot;:[],&quot;itemList&quot;:[{&quot;itemAttributeSets&quot;:[{&quot;attributes&quot;:[{&quot;attributeId&quot;:1381,&quot;value&quot;:null,&quot;valueImages&quot;:null,&quot;code&quot;:&quot;Regular&quot;,&quot;description&quot;:&quot;Regular&quot;,&quot;hexColorCode&quot;:null,&quot;displayOrder&quot;:20,&quot;defaultAttribute&quot;:true,&quot;copyText&quot;:null,&quot;copyHeader&quot;:&quot;Regular&quot;,&quot;previewCopyHeader&quot;:null,&quot;previewCopyText&quot;:null,&quot;previewHexColorCode&quot;:null,&quot;quantityModificationAmount&quot;:1,&quot;previewUIContentType&quot;:null,&quot;attributeImages&quot;:[],&quot;keywords&quot;:[],&quot;selectedQuantity&quot;:1,&quot;isSelected&quot;:true}],&quot;itemAttributeSetId&quot;:616,&quot;prompt&quot;:null,&quot;minimumChoices&quot;:1,&quot;maximumChoices&quot;:1,&quot;maximumSize&quot;:1,&quot;displayOrder&quot;:1,&quot;attributeSetName&quot;:&quot;Pizza Sauce&quot;,&quot;attributeSetDescription&quot;:&quot;Pizza Sauce&quot;,&quot;attributeSetId&quot;:149,&quot;attributeSetInputType&quot;:&quot;Choose&quot;,&quot;isQuantityModifier&quot;:true,&quot;copyHeader&quot;:&quot;How much sauce would you like?&quot;,&quot;copyText&quot;:null,&quot;tags&quot;:[],&quot;uiDisplayTemplate&quot;:{&quot;id&quot;:22,&quot;displayTemplateCode&quot;:&quot;MODIFIER_CUSTOMIZATION&quot;,&quot;description&quot;:&quot;A Horizontal Row of Dropdowns for Modifier Customization Selection&quot;},&quot;attributeSetImages&quot;:[],&quot;isLocationAttribute&quot;:false}],&quot;uiNavigationSections&quot;:[],&quot;commerceItemNumber&quot;:&quot;110170&quot;,&quot;copyDisclaimer&quot;:null,&quot;copyHeader&quot;:&quot;Tomato&quot;,&quot;copyText&quot;:null,&quot;nutritionalCopy&quot;:null,&quot;ingredientsCopy&quot;:null,&quot;defaultChoice&quot;:true,&quot;displayOrder&quot;:10,&quot;externalItemNumber&quot;:null,&quot;images&quot;:[],&quot;itemId&quot;:170,&quot;itemListId&quot;:622,&quot;itemType&quot;:&quot;KIT&quot;,&quot;itemName&quot;:&quot;Sauce - Tomato&quot;,&quot;itemDescription&quot;:&quot;Tomato Sauce&quot;,&quot;optionTag&quot;:&quot;TOMATO_SAUCE&quot;,&quot;previewCopyHeader&quot;:null,&quot;previewCopyText&quot;:null,&quot;previewUIContentType&quot;:null,&quot;price&quot;:0,&quot;productType&quot;:&quot;PIZZA&quot;,&quot;uiNavigationType&quot;:{&quot;typeCode&quot;:&quot;PIZZA&quot;,&quot;copyText&quot;:&quot;Customize Your Pizza&quot;},&quot;isFulfillmentAvailable&quot;:true,&quot;showQuantitySelector&quot;:true,&quot;servingInstructionsCopy&quot;:null,&quot;tags&quot;:[],&quot;links&quot;:[{&quot;href&quot;:&quot;/kitting/stores/90/items/170&quot;,&quot;rel&quot;:&quot;item&quot;}],&quot;selectedQuantity&quot;:1,&quot;isSelected&quot;:true}],&quot;kitContentId&quot;:101,&quot;kitContentCopyHeader&quot;:&quot;Choose sauce&quot;,&quot;kitContentCopyText&quot;:&quot;(Required)&quot;,&quot;minimumOrderQuantity&quot;:1,&quot;maximumOrderQuantity&quot;:1,&quot;displayOrder&quot;:1,&quot;allowMultiples&quot;:false,&quot;quantityAtNoCharge&quot;:0,&quot;fulfillmentOnly&quot;:false,&quot;tags&quot;:[],&quot;uiDisplayTemplate&quot;:{&quot;id&quot;:21,&quot;displayTemplateCode&quot;:&quot;CHECKBOX_LIST&quot;,&quot;description&quot;:&quot;A Heading followed by a list of Checkboxes&quot;}}],&quot;sectionCode&quot;:&quot;SAUCE&quot;,&quot;sectionCopyText&quot;:&quot;Sauce&quot;,&quot;sectionCopyTextIsVisible&quot;:false,&quot;displayOrder&quot;:20,&quot;uiNavigationType&quot;:null,&quot;uiContentType&quot;:null},{&quot;kitContents&quot;:[{&quot;kitList&quot;:[],&quot;itemList&quot;:[{&quot;itemAttributeSets&quot;:[{&quot;attributes&quot;:[{&quot;attributeId&quot;:1337,&quot;value&quot;:null,&quot;valueImages&quot;:null,&quot;code&quot;:&quot;None&quot;,&quot;description&quot;:&quot;None&quot;,&quot;hexColorCode&quot;:null,&quot;displayOrder&quot;:5,&quot;defaultAttribute&quot;:true,&quot;copyText&quot;:null,&quot;copyHeader&quot;:&quot;None&quot;,&quot;previewCopyHeader&quot;:null,&quot;previewCopyText&quot;:null,&quot;previewHexColorCode&quot;:null,&quot;quantityModificationAmount&quot;:1,&quot;previewUIContentType&quot;:null,&quot;attributeImages&quot;:[],&quot;keywords&quot;:[],&quot;selectedQuantity&quot;:1,&quot;isSelected&quot;:true}],&quot;itemAttributeSetId&quot;:599,&quot;prompt&quot;:null,&quot;minimumChoices&quot;:1,&quot;maximumChoices&quot;:1,&quot;maximumSize&quot;:0,&quot;displayOrder&quot;:1,&quot;attributeSetName&quot;:&quot;Pizza Extra Cheese&quot;,&quot;attributeSetDescription&quot;:&quot;Pizza Extra Cheese&quot;,&quot;attributeSetId&quot;:148,&quot;attributeSetInputType&quot;:&quot;Choose&quot;,&quot;isQuantityModifier&quot;:true,&quot;copyHeader&quot;:&quot;Add Extra Cheese&quot;,&quot;copyText&quot;:null,&quot;tags&quot;:[],&quot;uiDisplayTemplate&quot;:{&quot;id&quot;:22,&quot;displayTemplateCode&quot;:&quot;MODIFIER_CUSTOMIZATION&quot;,&quot;description&quot;:&quot;A Horizontal Row of Dropdowns for Modifier Customization Selection&quot;},&quot;attributeSetImages&quot;:[],&quot;isLocationAttribute&quot;:false}],&quot;uiNavigationSections&quot;:[],&quot;commerceItemNumber&quot;:&quot;500712&quot;,&quot;copyDisclaimer&quot;:null,&quot;copyHeader&quot;:&quot;Shredded Mozzarella&quot;,&quot;copyText&quot;:&quot;Shredded Mozzarella&quot;,&quot;nutritionalCopy&quot;:null,&quot;ingredientsCopy&quot;:null,&quot;defaultChoice&quot;:true,&quot;displayOrder&quot;:1,&quot;externalItemNumber&quot;:&quot;739214&quot;,&quot;images&quot;:[],&quot;itemId&quot;:1990,&quot;itemListId&quot;:630,&quot;itemType&quot;:&quot;KIT&quot;,&quot;itemName&quot;:&quot;Cheese - Sheet Shredded Mozzarella&quot;,&quot;itemDescription&quot;:&quot;Shredded Mozzarella&quot;,&quot;optionTag&quot;:&quot;SHREDDED_MOZZARELLA&quot;,&quot;previewCopyHeader&quot;:null,&quot;previewCopyText&quot;:null,&quot;previewUIContentType&quot;:null,&quot;price&quot;:3,&quot;productType&quot;:&quot;PIZZA&quot;,&quot;uiNavigationType&quot;:{&quot;typeCode&quot;:&quot;PIZZA&quot;,&quot;copyText&quot;:&quot;Customize Your Pizza&quot;},&quot;isFulfillmentAvailable&quot;:true,&quot;showQuantitySelector&quot;:true,&quot;servingInstructionsCopy&quot;:null,&quot;tags&quot;:[],&quot;links&quot;:[{&quot;href&quot;:&quot;/kitting/stores/90/items/1990&quot;,&quot;rel&quot;:&quot;item&quot;}],&quot;selectedQuantity&quot;:1,&quot;isSelected&quot;:true}],&quot;kitContentId&quot;:100,&quot;kitContentCopyHeader&quot;:&quot;Choose cheese&quot;,&quot;kitContentCopyText&quot;:&quot;(Required)&quot;,&quot;minimumOrderQuantity&quot;:1,&quot;maximumOrderQuantity&quot;:2,&quot;displayOrder&quot;:2,&quot;allowMultiples&quot;:false,&quot;quantityAtNoCharge&quot;:1,&quot;fulfillmentOnly&quot;:false,&quot;tags&quot;:[],&quot;uiDisplayTemplate&quot;:{&quot;id&quot;:23,&quot;displayTemplateCode&quot;:&quot;SINGLE_SELECT_LIST&quot;,&quot;description&quot;:&quot;A Heading followed by a list of radio buttons&quot;}}],&quot;sectionCode&quot;:&quot;CHEESE&quot;,&quot;sectionCopyText&quot;:&quot;Cheese&quot;,&quot;sectionCopyTextIsVisible&quot;:false,&quot;displayOrder&quot;:30,&quot;uiNavigationType&quot;:null,&quot;uiContentType&quot;:null},{&quot;kitContents&quot;:[{&quot;kitList&quot;:[],&quot;itemList&quot;:[],&quot;kitContentId&quot;:10,&quot;kitContentCopyHeader&quot;:&quot;Choose toppings&quot;,&quot;kitContentCopyText&quot;:null,&quot;minimumOrderQuantity&quot;:0,&quot;maximumOrderQuantity&quot;:5,&quot;displayOrder&quot;:3,&quot;allowMultiples&quot;:true,&quot;quantityAtNoCharge&quot;:0,&quot;fulfillmentOnly&quot;:false,&quot;tags&quot;:[],&quot;uiDisplayTemplate&quot;:{&quot;id&quot;:21,&quot;displayTemplateCode&quot;:&quot;CHECKBOX_LIST&quot;,&quot;description&quot;:&quot;A Heading followed by a list of Checkboxes&quot;}}],&quot;sectionCode&quot;:&quot;TOPPINGS&quot;,&quot;sectionCopyText&quot;:&quot;Toppings&quot;,&quot;sectionCopyTextIsVisible&quot;:false,&quot;displayOrder&quot;:40,&quot;uiNavigationType&quot;:null,&quot;uiContentType&quot;:null},{&quot;kitContents&quot;:[{&quot;kitList&quot;:[],&quot;itemList&quot;:[],&quot;kitContentId&quot;:2445,&quot;kitContentCopyHeader&quot;:&quot;Choose dipping sauce&quot;,&quot;kitContentCopyText&quot;:&quot;Choose dipping sauce&quot;,&quot;minimumOrderQuantity&quot;:0,&quot;maximumOrderQuantity&quot;:50,&quot;displayOrder&quot;:40,&quot;allowMultiples&quot;:true,&quot;quantityAtNoCharge&quot;:0,&quot;fulfillmentOnly&quot;:false,&quot;tags&quot;:[{&quot;copyText&quot;:&quot;&quot;,&quot;displayOrder&quot;:null,&quot;imageFileName&quot;:&quot;&quot;,&quot;isSearchable&quot;:false,&quot;tag&quot;:&quot;OOF_SIDE&quot;,&quot;tagName&quot;:&quot;OOF Side&quot;,&quot;tagType&quot;:&quot;Fulfillment&quot;,&quot;tagValue&quot;:&quot;OOF_SIDE&quot;}],&quot;uiDisplayTemplate&quot;:{&quot;id&quot;:-1,&quot;displayTemplateCode&quot;:&quot;CHECKBOX_LIST&quot;,&quot;description&quot;:null}}],&quot;sectionCode&quot;:&quot;Dipping_Sauce&quot;,&quot;sectionCopyText&quot;:&quot;Dipping_Sauce&quot;,&quot;sectionCopyTextIsVisible&quot;:false,&quot;displayOrder&quot;:99,&quot;uiNavigationType&quot;:null,&quot;uiContentType&quot;:null}],&quot;commerceItemNumber&quot;:&quot;110120&quot;,&quot;copyDisclaimer&quot;:null,&quot;copyHeader&quot;:&quot;Create Your Own Sheet Pizza - 32 Slices&quot;,&quot;copyText&quot;:&quot;Create your own pizza with your choice of sauce, cheese, and toppings. Hot &amp; ready to enjoy!&quot;,&quot;nutritionalCopy&quot;:&quot;5340 cal./cheese pizza&quot;,&quot;ingredientsCopy&quot;:null,&quot;externalItemNumber&quot;:&quot;86674&quot;,&quot;images&quot;:[{&quot;url&quot;:&quot;https://s7d1.scene7.com/is/image/wegmans/TS_App_CreateYourOwn5282B:m2g_hero_smart_crop&quot;,&quot;imageType&quot;:&quot;ITEM_HERO&quot;,&quot;platformType&quot;:&quot;ANY&quot;},{&quot;url&quot;:&quot;https://s7d1.scene7.com/is/image/wegmans/TS_App_CreateYourOwn5282B:m2g_cart_smart_crop&quot;,&quot;imageType&quot;:&quot;CART_ITEM&quot;,&quot;platformType&quot;:&quot;ANY&quot;},{&quot;url&quot;:&quot;https://s7d1.scene7.com/is/image/wegmans/TS_App_CreateYourOwn5282B:m2g_item_smart_crop&quot;,&quot;imageType&quot;:&quot;MENU_ITEM&quot;,&quot;platformType&quot;:&quot;ANY&quot;}],&quot;itemId&quot;:120,&quot;itemType&quot;:&quot;KIT&quot;,&quot;menuItemType&quot;:&quot;marketCafe&quot;,&quot;itemDescription&quot;:&quot;Sheet Pizza&quot;,&quot;itemName&quot;:&quot;Sheet Pizza (Full Only)&quot;,&quot;kitId&quot;:100,&quot;kitType&quot;:&quot;ORDERABLE&quot;,&quot;previewCopyHeader&quot;:null,&quot;previewCopyText&quot;:null,&quot;previewUIContentType&quot;:null,&quot;price&quot;:27,&quot;pricingMethod&quot;:&quot;BASEPLUS&quot;,&quot;productType&quot;:&quot;PIZZA&quot;,&quot;servingInstructionsCopy&quot;:null,&quot;storeId&quot;:90,&quot;storeNumber&quot;:90,&quot;uiNavigationType&quot;:{&quot;typeCode&quot;:&quot;PIZZA&quot;,&quot;copyText&quot;:&quot;Customize Your Pizza&quot;},&quot;wooKitId&quot;:&quot;${cartItemID}&quot;,&quot;isFulfillmentAvailable&quot;:true,&quot;showQuantitySelector&quot;:true,&quot;tags&quot;:[{&quot;copyText&quot;:&quot;Capacity&quot;,&quot;displayOrder&quot;:null,&quot;imageFileName&quot;:null,&quot;isSearchable&quot;:false,&quot;tag&quot;:&quot;Capacity&quot;,&quot;tagName&quot;:&quot;Capacity&quot;,&quot;tagType&quot;:&quot;Fulfillment&quot;,&quot;tagValue&quot;:&quot;Capacity&quot;}],&quot;showMadeFor&quot;:true,&quot;leadTimeCopyText&quot;:null,&quot;pickupRestrictionsCopyText&quot;:null,&quot;links&quot;:[{&quot;href&quot;:&quot;/kitting/stores/90/kits/100&quot;,&quot;rel&quot;:&quot;self&quot;}],&quot;selectedQuantity&quot;:1,&quot;isSelected&quot;:true},&quot;schema&quot;:&quot;KIT&quot;,&quot;madeFor&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cart/organizations/1/stores/90/storefronts/1/cart-items?api-version=2020-10-07</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cartID</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;cartId&quot;:&quot;(.*?)&quot;,&quot;status&quot;:{&quot;canCheck</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/1/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/1/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://edge.adobedc.net/ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=761098d9-3318-4f04-bc11-685ad476bf17" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;eventType&quot;:&quot;web.webinteraction.linkClicks&quot;,&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;name&quot;:&quot;Product Detail View | Create Your Own Sheet Pizza - 32 Slices&quot;},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;},&quot;webInteraction&quot;:{&quot;name&quot;:&quot;cart add&quot;,&quot;type&quot;:&quot;other&quot;,&quot;linkClicks&quot;:{&quot;value&quot;:1}}},&quot;device&quot;:{&quot;screenHeight&quot;:1080,&quot;screenWidth&quot;:1920,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1920,&quot;viewportHeight&quot;:969}},&quot;placeContext&quot;:{&quot;localTime&quot;:&quot;2022-09-30T09:55:54.390-04:00&quot;,&quot;localTimezoneOffset&quot;:240},&quot;timestamp&quot;:&quot;2022-09-30T13:55:54.390Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.12.0+2.13.0&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;commerce&quot;:{&quot;productListAdds&quot;:{&quot;value&quot;:1}},&quot;productListItems&quot;:[{&quot;SKU&quot;:&quot;SKU_86674&quot;}]}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;azureedge.net&quot;,&quot;cookiesEnabled&quot;:true,&quot;entries&quot;:[{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_identity&quot;,&quot;value&quot;:&quot;CiY3OTQ1NjEyOTM0NDc1MDk0OTI2NDE2MjkwNzkwMzkxOTI3MjU0M1IOCLCblqu4MBgBKgNWQTbwAfmF7da4MA==&quot;},{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_cluster&quot;,&quot;value&quot;:&quot;va6&quot;}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=761098d9-3318-4f04-bc11-685ad476bf17</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dc.services.visualstudio.com/v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.995775cd25eb4d83&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.040&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;target&quot;:&quot;mbox.wegmans.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.006dfea0a353453a&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.053&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;target&quot;:&quot;mbox.wegmans.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.2f54c69b67f14a92&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST https://wegcertapi.azure-api.net/cart/organizations/1/stores/90/storefronts/1/cart-items?api-version=2020-10-07&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.080&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST https://wegcertapi.azure-api.net/cart/organizations/1/stores/90/storefronts/1/cart-items?api-version=2020-10-07&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Event&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;EventData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Product Detail Page - Add to Cart&quot;,&quot;properties&quot;:{&quot;Actions&quot;:&quot;Added to Cart&quot;,&quot;Product Name - Added to Cart&quot;:&quot;Sheet Pizza (Full Only)&quot;,&quot;SKU - Added to Cart&quot;:&quot;739214&quot;,&quot;Made For&quot;:&quot;null&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Event&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;EventData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;All Cuisine Menu - Top Nav - Menu Selection&quot;,&quot;properties&quot;:{&quot;Actions&quot;:&quot;Meals&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Pizza &amp; Wings Menu&quot;,&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;duration&quot;:&quot;00:00:01.411&quot;,&quot;properties&quot;:{&quot;Window Size&quot;:&quot;1920 x 969&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;,&quot;refUri&quot;:&quot;&quot;,&quot;isLoggedIn&quot;:&quot;false&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sdk-Context" elementType="Header">
                  <stringProp name="Header.name">Sdk-Context</stringProp>
                  <stringProp name="Header.value">appId</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://edge.adobedc.net/ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=042fa5a4-4ed0-4883-99c3-9160e6e24edd" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;eventType&quot;:&quot;web.webpagedetails.pageViews&quot;,&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;name&quot;:&quot;Cuisine View | Pizza &amp; Wings&quot;,&quot;pageViews&quot;:{&quot;value&quot;:1}},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;}},&quot;device&quot;:{&quot;screenHeight&quot;:1080,&quot;screenWidth&quot;:1920,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1920,&quot;viewportHeight&quot;:969}},&quot;placeContext&quot;:{&quot;localTime&quot;:&quot;2022-09-30T09:55:55.007-04:00&quot;,&quot;localTimezoneOffset&quot;:240},&quot;timestamp&quot;:&quot;2022-09-30T13:55:55.007Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.12.0+2.13.0&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;identityMap&quot;:{},&quot;commerce&quot;:{&quot;productViews&quot;:{&quot;value&quot;:&quot;&quot;}},&quot;marketing&quot;:{&quot;trackingCode&quot;:&quot;&quot;},&quot;_experience&quot;:{&quot;analytics&quot;:{&quot;customDimensions&quot;:{&quot;eVars&quot;:{&quot;eVar1&quot;:&quot;Cuisine View | Pizza &amp; Wings&quot;,&quot;eVar2&quot;:&quot;n/a&quot;,&quot;eVar3&quot;:&quot;n/a&quot;,&quot;eVar4&quot;:&quot;n/a&quot;,&quot;eVar5&quot;:&quot;n/a&quot;,&quot;eVar6&quot;:&quot;Cuisine View&quot;,&quot;eVar7&quot;:&quot;www.meals2go.com&quot;,&quot;eVar8&quot;:&quot;english&quot;,&quot;eVar29&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;eVar59&quot;:&quot;Guest&quot;,&quot;eVar62&quot;:&quot;79456129344750949264162907903919272543&quot;,&quot;eVar63&quot;:&quot;90&quot;,&quot;eVar90&quot;:&quot;&quot;,&quot;eVar100&quot;:&quot;&quot;},&quot;props&quot;:{&quot;prop2&quot;:&quot;n/a&quot;,&quot;prop3&quot;:&quot;n/a&quot;,&quot;prop4&quot;:&quot;n/a&quot;,&quot;prop5&quot;:&quot;n/a&quot;,&quot;prop6&quot;:&quot;Cuisine View&quot;,&quot;prop7&quot;:&quot;www.meals2go.com&quot;,&quot;prop8&quot;:&quot;english&quot;,&quot;prop29&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;prop62&quot;:&quot;79456129344750949264162907903919272543&quot;}}}},&quot;productListItems&quot;:[]}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;azureedge.net&quot;,&quot;cookiesEnabled&quot;:true,&quot;entries&quot;:[{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_identity&quot;,&quot;value&quot;:&quot;CiY3OTQ1NjEyOTM0NDc1MDk0OTI2NDE2MjkwNzkwMzkxOTI3MjU0M1IOCLCblqu4MBgBKgNWQTbwAfmF7da4MA==&quot;},{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_cluster&quot;,&quot;value&quot;:&quot;va6&quot;}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=042fa5a4-4ed0-4883-99c3-9160e6e24edd</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;86bd03462fd74aeabf902d4f0629a563&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;2994520067BF1401-221764B632E2C21A&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Cuisine View | Pizza &amp; Wings&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}},&quot;prefetch&quot;:{&quot;views&quot;:[{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Cuisine View | Pizza &amp; Wings&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;dbe31751288f4489a8680fc79a3be3f1&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;1605E73C41645675-0E9EABF36E37D24C&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Cuisine View | Pizza &amp; Wings&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/513/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/513/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/361/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/361/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/395/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/395/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/120/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/120/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/886/children?api-version=2021-02-01" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/storefronts/1/menus/1/menu-contents/886/children</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="9_ClickOnCheckoutIcon" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/cart/organizations/1/stores/90/storefronts/1?api-version=2020-10-07&amp;includeUnavailableItems=true&amp;fulfillmentType=delivery" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2020-10-07</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="includeUnavailableItems" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">includeUnavailableItems</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fulfillmentType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fulfillmentType</stringProp>
                  <stringProp name="Argument.value">delivery</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cart/organizations/1/stores/90/storefronts/1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dc.services.visualstudio.com/v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.cfa18822f68c4af6&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.025&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;target&quot;:&quot;mbox.wegmans.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.42dc28660d3f4d5f&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.030&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST //mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0&quot;,&quot;target&quot;:&quot;mbox.wegmans.com&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.5295d06cb5364916&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/1/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.195&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/1/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.d5ad05a110264e5c&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/886/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.698&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/886/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.1b007c41abec4324&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/361/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.750&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/361/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.9544d2f552164e69&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/120/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.752&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/120/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.5a071a2feabc40da&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/395/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.819&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/395/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|ec35c42e6d4446a9828624493c94225d.cd13afa2a32b453b&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/513/children?api-version=2021-02-01&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:00.857&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET https://wegcertapi.azure-api.net/kitting/stores/90/storefronts/1/menus/1/menu-contents/513/children?api-version=2021-02-01&quot;,&quot;target&quot;:&quot;wegcertapi.azure-api.net&quot;,&quot;type&quot;:&quot;Ajax&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;${currenttime}&quot;,&quot;iKey&quot;:&quot;00f0d7c2-64a5-4b63-aaa1-3661bcd5c026&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.00f0d7c264a54b63aaa13661bcd5c026.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;vtcrW&quot;,&quot;ai.session.id&quot;:&quot;ZGun8&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.3.1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Shopping Cart&quot;,&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;duration&quot;:&quot;00:00:01.411&quot;,&quot;properties&quot;:{&quot;Window Size&quot;:&quot;1920 x 969&quot;,&quot;isUserLoggedIn&quot;:&quot;false&quot;,&quot;isImpersonation&quot;:&quot;false&quot;,&quot;customerId&quot;:&quot;null&quot;,&quot;isScbCustomer&quot;:&quot;false&quot;,&quot;storeNumber&quot;:&quot;90&quot;,&quot;menuIsCatering&quot;:&quot;false&quot;,&quot;fulfillmentContextName&quot;:&quot;Delivery&quot;,&quot;buildVersion&quot;:&quot;20220929.4&quot;,&quot;refUri&quot;:&quot;&quot;,&quot;isLoggedIn&quot;:&quot;false&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;ec35c42e6d4446a9828624493c94225d&quot;}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sdk-Context" elementType="Header">
                  <stringProp name="Header.name">Sdk-Context</stringProp>
                  <stringProp name="Header.value">appId</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://edge.adobedc.net/ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=c17365e1-6736-4607-9979-09292a767692" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;eventType&quot;:&quot;web.webpagedetails.pageViews&quot;,&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;name&quot;:&quot;Shopping Cart&quot;,&quot;pageViews&quot;:{&quot;value&quot;:1}},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;}},&quot;device&quot;:{&quot;screenHeight&quot;:1080,&quot;screenWidth&quot;:1920,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1920,&quot;viewportHeight&quot;:969}},&quot;placeContext&quot;:{&quot;localTime&quot;:&quot;2022-09-30T09:56:05.019-04:00&quot;,&quot;localTimezoneOffset&quot;:240},&quot;timestamp&quot;:&quot;2022-09-30T13:56:05.020Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.12.0+2.13.0&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;identityMap&quot;:{},&quot;commerce&quot;:{&quot;productViews&quot;:{&quot;value&quot;:&quot;&quot;}},&quot;marketing&quot;:{&quot;trackingCode&quot;:&quot;&quot;},&quot;_experience&quot;:{&quot;analytics&quot;:{&quot;customDimensions&quot;:{&quot;eVars&quot;:{&quot;eVar1&quot;:&quot;Shopping Cart&quot;,&quot;eVar2&quot;:&quot;n/a&quot;,&quot;eVar3&quot;:&quot;n/a&quot;,&quot;eVar4&quot;:&quot;n/a&quot;,&quot;eVar5&quot;:&quot;n/a&quot;,&quot;eVar6&quot;:&quot;Shopping Cart&quot;,&quot;eVar7&quot;:&quot;www.meals2go.com&quot;,&quot;eVar8&quot;:&quot;english&quot;,&quot;eVar29&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;eVar59&quot;:&quot;Guest&quot;,&quot;eVar62&quot;:&quot;79456129344750949264162907903919272543&quot;,&quot;eVar63&quot;:&quot;90&quot;,&quot;eVar90&quot;:&quot;&quot;,&quot;eVar100&quot;:&quot;&quot;},&quot;props&quot;:{&quot;prop2&quot;:&quot;n/a&quot;,&quot;prop3&quot;:&quot;n/a&quot;,&quot;prop4&quot;:&quot;n/a&quot;,&quot;prop5&quot;:&quot;n/a&quot;,&quot;prop6&quot;:&quot;Shopping Cart&quot;,&quot;prop7&quot;:&quot;www.meals2go.com&quot;,&quot;prop8&quot;:&quot;english&quot;,&quot;prop29&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;prop62&quot;:&quot;79456129344750949264162907903919272543&quot;}}}},&quot;productListItems&quot;:[]}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;azureedge.net&quot;,&quot;cookiesEnabled&quot;:true,&quot;entries&quot;:[{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_identity&quot;,&quot;value&quot;:&quot;CiY3OTQ1NjEyOTM0NDc1MDk0OTI2NDE2MjkwNzkwMzkxOTI3MjU0M1IOCLCblqu4MBgBKgNWQTbwAfmF7da4MA==&quot;},{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_cluster&quot;,&quot;value&quot;:&quot;va6&quot;}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=c17365e1-6736-4607-9979-09292a767692</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://edge.adobedc.net/ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=c517ed23-8c80-4a8f-ae8f-3e7fc7665aee" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;eventType&quot;:&quot;web.webinteraction.linkClicks&quot;,&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;name&quot;:&quot;Shopping Cart&quot;},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;},&quot;webInteraction&quot;:{&quot;name&quot;:&quot;cart view&quot;,&quot;type&quot;:&quot;other&quot;,&quot;linkClicks&quot;:{&quot;value&quot;:1}}},&quot;device&quot;:{&quot;screenHeight&quot;:1080,&quot;screenWidth&quot;:1920,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1920,&quot;viewportHeight&quot;:969}},&quot;placeContext&quot;:{&quot;localTime&quot;:&quot;2022-09-30T09:56:05.020-04:00&quot;,&quot;localTimezoneOffset&quot;:240},&quot;timestamp&quot;:&quot;2022-09-30T13:56:05.020Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.12.0+2.13.0&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;commerce&quot;:{&quot;productListViews&quot;:{&quot;value&quot;:1}},&quot;productListItems&quot;:[{&quot;SKU&quot;:&quot;SKU_86674&quot;,&quot;name&quot;:&quot;&quot;,&quot;quantity&quot;:&quot;&quot;,&quot;priceTotal&quot;:&quot;&quot;},{&quot;SKU&quot;:&quot;SKU_739214&quot;,&quot;name&quot;:&quot;&quot;,&quot;quantity&quot;:&quot;&quot;,&quot;priceTotal&quot;:&quot;&quot;}]}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;azureedge.net&quot;,&quot;cookiesEnabled&quot;:true,&quot;entries&quot;:[{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_identity&quot;,&quot;value&quot;:&quot;CiY3OTQ1NjEyOTM0NDc1MDk0OTI2NDE2MjkwNzkwMzkxOTI3MjU0M1IOCLCblqu4MBgBKgNWQTbwAfmF7da4MA==&quot;},{&quot;key&quot;:&quot;kndctr_68B620B35350F1650A490D45_AdobeOrg_cluster&quot;,&quot;value&quot;:&quot;va6&quot;}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/va6/v1/interact?configId=25cb7adc-fb53-46f9-a9d2-5a7ce3b6e460&amp;requestId=c517ed23-8c80-4a8f-ae8f-3e7fc7665aee</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;8fe12b0fb574439eb530e42eb00c7fe2&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;1005A9BA488C933E-580CCE7EBBE8FD94&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Shopping Cart&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}},&quot;prefetch&quot;:{&quot;views&quot;:[{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Shopping Cart&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mbox.wegmans.com/rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;b647e57d20124ee485174a9fa1f410f7&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:-240,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1920,&quot;height&quot;:1080,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1920,&quot;height&quot;:969},&quot;browser&quot;:{&quot;host&quot;:&quot;meals2go-cert.azureedge.net&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Google, Vulkan 1.3.0 (SwiftShader Device (Subzero) (0x0000C0DE)), SwiftShader driver)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;dd160402ed8046eab607b0995a0035ea.34_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;79456129344750949264162907903919272543&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:7,&quot;blob&quot;:&quot;6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;7805F88798643E29-6EA41BE22CE2E03C&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{&quot;parameters&quot;:{&quot;pageURL&quot;:&quot;https://meals2go-cert.azureedge.net/menu/Pizza%20&amp;%20Wings&quot;,&quot;storeId&quot;:&quot;90&quot;,&quot;pageName&quot;:&quot;Shopping Cart&quot;,&quot;siteName&quot;:&quot;www.meals2go.com&quot;,&quot;campaignId&quot;:&quot;&quot;}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=wegmans&amp;sessionId=161c00b052f54468817092d0c8bc0ec8&amp;version=2.7.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/kits/330?api-version=2021-02-01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/kits/330</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/kits/999?api-version=2021-02-01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/kits/999</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://wegcertapi.azure-api.net/kitting/stores/90/items/1080?api-version=2021-02-01" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="api-version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api-version</stringProp>
                  <stringProp name="Argument.value">2021-02-01</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">kitting/stores/90/items/1080</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                </elementProp>
                <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                  <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                  <stringProp name="Header.value">861fc69b2434494ab9f3250633ad8a5c</stringProp>
                </elementProp>
                <elementProp name="x-include-auth" elementType="Header">
                  <stringProp name="Header.name">x-include-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
